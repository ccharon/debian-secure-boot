#!/bin/sh
# prerm script for debian-secure-boot
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

do_divert() {
    [ -L "$1" ] && rm "$1"
    dpkg-divert --remove --package debian-secure-boot --rename \
            --divert "$2" "$1"
}

case "$1" in
    remove)
        # Undo kernel hook diversion here.  It's suggested to do so here
        # instead of in the postrm for a conffile by ConfigPackages:
        # https://wiki.debian.org/ConfigPackages/
        do_divert /etc/kernel/postinst.d/zz-update-grub \
            /etc/debian-secure-boot/postinst.d/zz-update-grub
        do_divert /etc/kernel/postrm.d/zz-update-grub \
            /etc/debian-secure-boot/postrm.d/zz-update-grub
        do_divert /etc/grub.d/10_linux \
            /etc/debian-secure-boot/10_linux.distrib
        rmdir /etc/debian-secure-boot/postinst.d
        rmdir /etc/debian-secure-boot/postrm.d
    ;;

    upgrade|deconfigure)
    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
